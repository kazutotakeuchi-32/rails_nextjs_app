# ローカルssl化用のファイル
user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # ソケット通信を行うための設定
    upstream api {
        server unix:///app/tmp/sockets/puma.sock;
    }

    # リバースプロキシの設定
    # upstream api_reverse_proxy {
    #     server api:3000;
    # }

    upstream front {
        server front:3000;
    }

    server {
        listen 443 ssl;

        server_name localhost;


        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;


        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_password_file /etc/nginx/ssl/server.password;


        root /app/public;

        proxy_connect_timeout 600;
        proxy_read_timeout 600;
        proxy_send_timeout 600;

        client_max_body_size 100m;
        error_page 404 /404.html;
        error_page 500 502 503 504 /500.html;
        
        keepalive_timeout 600;

        location /health_check {
            root /usr/share/nginx/html;
            empty_gif;
            break;
        }

        location /nginx_docs {
            alias /usr/share/nginx/html;
            autoindex on;
        } 


        location /api {
            try_files @uri @api;
        }


        location / {
            try_files @uri @front;
        }

        # リバースプロキシの設定
        # location / {
        #     try_files $uri $uri/ @api_reverse_proxy;
        # }

        # ソケット通信を行うための設定
        location @api {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_pass http://api;
        }

        # リバースプロキシの設定
        # location @api_reverse_proxy {
        #     proxy_pass http://api_reverse_proxy;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header Host $http_host;
            
        # }

        location @front {
            proxy_pass http://front;
        }

    }
}