name: CI

on: 
  push:
    branches-ignore:       
      - main
  pull_request:
  workflow_call:

jobs:
  rspec:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
    defaults:
      run:
        working-directory: rails
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Ruby 3.1.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Bundle and gem install
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle
      - name: initialize database
        run: |
          cp config/database_ci.yml config/database.yml
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:migrate RAILS_ENV=test
      - name: Run rspec
        run: |
          bundle exec rspec

  rubocop:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rails
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Ruby 3.1.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true
      - name: Bundle and gem install
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle
      - name: Run rubocop
        run: |
          bundle exec rubocop
  eslint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: next/app
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install packages
        run: |
          npm install
      - name: Run eslint
        run: |
          npm run lint